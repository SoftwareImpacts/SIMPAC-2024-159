#-----------------------------------------------------------------------------------------------
# This is the Pseudocode for implementing QF-LCA and QF-LCC algorithms in a QAI program. The outputs 
# contribute to an intelligent decision (IDS) discussed in the DIB article, as well as the method 
# article https://doi.org/10.1016/j.mex.2023.102136. 
# From the articles, in the following programs, DL stands for |∆L_ab^±| according to Eq. (4) assigning # weights and values # to score energy states and thereby classify them for a strong prediction.
# Created by: Philip B. Alipour under the supervision of T. Aaron Gulliver at the
# University of Victoria, Dept. ECE, Victoria BC, Canada.
# Copyright © 2016--2023. All rights reserved.  
--------------------------------------------------------------------------------------------------
RUN QF-LCA for Statistical Measurements [Program A]
--------------------------------------------------------------------------------------------------
0 PRINT "Type probability results of system’s energy states:"
1 INPUT Energy State  # This ranges any value between GS and ES 
2 IF P(Energy State) = P(GS) THEN GOTO 8
3 IF P(Energy State) > P(GS) THEN GOTO 6
4 LET P(Energy State) = P(GS-ES)
5 GOTO 2
6 LET P(Energy State) = P(ES-GS)
7 GOTO 2
8 PRINT GS
9 END

RUN QF-LCC for a Strong Prediction [Program B]
------------------------------------------------------------------------------------------------
0 PRINT "Type prediction results of QDF measurements:"
1 INPUT M(Energy State) # This is a decoded energy state
2 IF M(DL > ½ L-D) THEN GOTO 8
3 IF M(DL ≤ ½ L-D) THEN GOTO 6
4 LET DL = |L(GS)-L(ES)|
5 GOTO 2
6 PRINT P(Energy State) < 2/3 {0, 1}  # Prints the complement too
7 GOTO 2
8 PRINT P(Energy State) ≥ 2/3 {0, 1}  # Prints the complement too 
9 END

RUN QF-LCC for Classification of a QDF measurement [Program C]
------------------------------------------------------------------------------------------------
0 INPUT d-1(NQubits = n)  # Input n-qubit pairs of a QDF over distance d
1 FOR I = 2 TO NQubits STEP 1 
2 LET Sum = Sum + d-1(I)   # Let Sum = 1 prior if counting is in qubit pairs + 1
3 NEXT I 
4 PRINT Avg(d-1)= Sum/NQubits 
5 IF M(DL > ½ L-D) AND Avg(d-1) THEN GOTO 8 in Program B
6 PRINT "The average inverse distance", Avg, "has class", C ≥ 1, "weight", W ≥ 1 
7 IF M(DL ≤ ½ L-D) AND ≤ Avg(d-1) ≤ 1/3 L-D THEN GOTO 6 in Program B
8 PRINT "The average inverse distance", Avg, "has class 0 and weight 0"
9 END 
